apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  generateName: init-gogs-
  namespace: cicd
spec:
  taskSpec:
#    params:
#    - name: GITEA_USER
#      type: string
#      description: Gogs admin username
#      default: gogs
#    - name: GITEA_PASSWORD
#      type: string
#      description: Gogs admin password
#      default: gogs
    stepTemplate:
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
    steps:
      - name: init-gogs
        image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        serviceAccount: gitea-init
        serviceAccountName: gitea-init
        script: |
          #!/usr/bin/env python3
          import os
          import requests 
          gitea_user = "$(params.gitea_user)"
          gitea_pwd = os.popen('oc get gitea gitea -ojsonpath="{.status.userPassword}"').read()
          webhookURL = "http://" + os.popen('oc get route webhook -o template --template="{{.spec.host}}"').read()
          gitea_url = "http://" + os.popen('oc get svc gitea -o template --template="{{.spec.clusterIP}}"').read() + ":3000"
          
          # configure webhook on spring-petclinic
          data_webhook = '{"type": "gogs", "config": { "url": "' + webhookURL + '", "content_type": "json"}, "events": ["push"], "active": true}'
          headers = {'Content-Type': 'application/json'}
          resp = requests.post(url = gitea_url + "/api/v1/repos/" + gitea_user + "/spring-petclinic/hooks", 
            headers = headers, 
            auth = (gitea_user, gitea_pwd), 
            data = data_webhook) 
          if resp.status_code != 200 and resp.status_code != 201:
            print("Error configuring the webhook (status code: {})".format(resp.status_code))
            print(resp.content)
          else:
            print("Configured webhook: " + webhookURL)
          
          # configure webhook on spring-petclinic-config
          data_webhook = '{"type": "gogs", "config": { "url": "' + webhookURL + '", "content_type": "json"}, "events": ["push"], "active": true}'
          headers = {'Content-Type': 'application/json'}
          resp = requests.post(url = gitea_url + "/api/v1/repos/" + gitea_user + "/spring-petclinic-config/hooks", 
            headers = headers, 
            auth = (gitea_user, gitea_pwd), 
            data = data_webhook) 
          if resp.status_code != 200 and resp.status_code != 201:
            print("Error configuring the webhook (status code: {})".format(resp.status_code))
            print(resp.content)
          else:
            print("Configured webhook: " + webhookURL)